version: "3.2"
services:
  template-serverless-lambda-python-lambda-api:
#    container_name: lambda-api
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
    privileged: true
    environment:
      # Fake credentials for Localstack
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      TEST_ENV: ${TEST_ENV}
    depends_on:
      - "localstack"
      - "redis"
      - "mysql"
    ports:
      - 5000:5000
    networks:
      - service-python-v1
    volumes:
      - ./:/app
  redis:
    image: "redis:alpine"
    ports:
      - 6379:6379
    expose:
      - 6379
    networks:
      - service-python-v1
  mysql:
    image: mysql:5.7.22
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: store
      MYSQL_ROOT_PASSWORD: store
    networks:
      - service-python-v1
  localstack:
    image: localstack/localstack
    privileged: true
    ports:
      - "4566:4566"
      - "4567-4582:4567-4582"
      - "9070:9070"
      - "8080:8080"
    environment:
      SERVICES: sqs,lambda,cloudwatch,s3
      DOCKER_HOST: unix:///var/run/docker.sock
      PORT_WEB_UI: 9070
      #LAMBDA_EXECUTOR: docker # est√° dando erro via docker
      LAMBDA_EXECUTOR: local
      DEBUG: 1
      HOSTNAME_EXTERNAL: localstack
    networks:
      - service-python-v1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/localstack:/tmp/localstack
networks:
  service-python-v1:
    external: true
